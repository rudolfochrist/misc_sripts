#!/usr/bin/env python
# encoding: utf-8

"""
Small command line script to generate .hgignore and .gitignore files

Copyright (c) 2010 Sebastian (Rudolfo) Christ [rudolfo.christ@gmail.com]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
"""

VERSION = "0.1.1"

import sys, os
import optparse

GIT = """
# my .gitignore

# general unwanted tmp files
.DS_Store
*.log
*.log.?
*.log.??
*~
*.tmp

# Xcode-specific files
build
*.swp
*~.nib
*.pbxuser
*.perspective
*.perspectivev3
*.mode1v3

#python compiled
*.pyc
*.pyo

# java compiled
*.class
*.jar

# C-Compiler
*.[ao]

# Eclipse specific-files
.settings
.project
.classpath

# project-specific files

"""

GIT_XCODE34 = """
# .gitignore for XCode3/4
# http://cocoaheads.tumblr.com/post/1350304132/gitignore-template-for-xcode3-4

# Mac OS X Finder
.DS_Store

# Sparkle distribution Private Key (Donâ€™t check me in!)
dsa_priv.pem

# XCode (and ancestors) per-user config (very noisy, and not relevant)
*.mode1
*.mode1v3
*.mode2v3
*.perspective
*.perspectivev3
*.pbxuser

# Generated files
VersionX-revision.h

# build products
build/
*.[oa]

# Other source repository archive directories (protects when importing)
.hg
.svn
CVS

# automatic backup files
*~.nib
*.swp
*~
*(Autosaved).rtfd/
Backup[ ]of[ ]*.pages/
Backup[ ]of[ ]*.key/
Backup[ ]of[ ]*.numbers/
"""

HG = """
syntax: glob

# general unwanted tmp files
.DS_Store
*.log
*.log.?
*.log.??
*~

# Xcode-specific files
build
*.swp
*~.nib
*.pbxuser
*.perspective
*.perspectivev3
*.mode1v3

#python compiled
*.pyc
*.pyo

# java compiled
*.class
*.jar

# Eclipse specific-files
.settings
.project
.classpath
.checkstyle

# project-specific files

"""

def create_ignore_file(vcs, template):
	"""Writes either the git or the hg template to a file in the current directory"""
	filename = ".%signore" % vcs
	with open(filename, "w") as f:
		f.write(template)
		
	print "- \033[32;1mCreated\033[0m %s in %s" % (filename, os.getcwd())

def main():
	usage = "%prog [hg|git]"
	description = """
	Utility to generate a .gitignore or .hgignore file
	"""
	parser = optparse.OptionParser(usage=usage, version=("%prog-" + VERSION),
		description=description)
	parser.add_option('--xcode', 
	  help='generate .gitignore for XCode3/4 (http://cocoaheads.tumblr.com/post/1350304132/gitignore-template-for-xcode3-4)',
	  action="store_true", dest='xcode')
	  
	
	options, args = parser.parse_args()
	if len(args) != 1:
		parser.error("invalid number of arguments\nSee --help for more options")
		
	if args[0] == "hg":
		create_ignore_file("hg", HG)
	elif args[0] == "git":
	  if options.xcode:
	    create_ignore_file("git", GIT_XCODE34)
	  else:
  		create_ignore_file("git", GIT)
	else:
		parser.error("illegal argument\nSee --help for more options")

if __name__ == "__main__":
	sys.exit(main())
